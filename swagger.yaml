openapi: "3.0.3"
info:
  title: "OPUS"
  version: "0.1"
servers:
  - url: http://localhost:8080
    description: Local
components:
  parameters:
    api_key_id_param:
      name: api_key_id
      in: path
      schema:
        type: string
        format: uuid
      required: true
      description: "public id of the api_key"
  schemas:
    ApiKeyGenerateRequest:
      type: "object"
      description: "Generate an api key"
      properties:
        description:
          type: "string"
          description: "Description associated with the key, for example: 'Access key for automated system X version Y'"
      required:
        - description
    ApiKeyGenerateResponse:
      type: "object"
      properties:
        id:
          type: "string"
          format: uuid
          description: "Id of the key, can be used to delete the key later. The 'prefix' part of the key"
        api_key:
          type: "string"
          description: "Api key used for authenticating with opus using X-API-KEY header. Includes a 'prefix' part which can be used to identify the key."
      required:
        - id
        - api_key
    ApiKeyResponse:
      type: "object"
      properties:
        id:
          type: "string"
          format: uuid
          description: "Id of the key"
        description:
          type: "string"
          description: "Description associated with the key"
      required:
        - id
        - description
    NodeAggregateResponse:
      type: array
      description: Array of account aggregated validator statistics, each representing one day
      items:
        type: object
        description: Aggregated node statistics for account in a single day
        properties:
          when:
            type: string
            format: date
            example: "2019-05-17"
            description: Date for which aggregated statistics are shown
          total:
            type: integer
            description: Total number of node statistics
          active:
            type: integer
            description: Total number of active/validating nodes
          created:
            type: integer
            description: Number of created validators that haven't been deposited yet
          deposited:
            type: integer
            description: Total number of nodes for which deposit happened, but they are not yet on chain
          pending:
            type: integer
            description: Number of validators in pending state
          exited:
            type: integer
            description: Number of validators in exited state
          unstakeable:
            type: integer
            description: Number of validators that can be unstaked
          balance_active:
            type: string
            pattern: "^\\d+$"
            description: Sum of the balance for active nodes
          balance_total:
            type: string
            pattern: "^\\d+$"
            description: Sum of the balance for all nodes (except exited)
          requests:
            description: "Used to display about staking request activity and progress of validator status"
            type: array
            items:
              type: object
              properties:
                transaction_id:
                  type: string
                  pattern: "^0x[a-f,0-9]+$"
                  description: Eth1 chain deposit transaction ID. This field is empty for unstake requests
                request_id:
                  type: string
                  format: uuid
                  example: 9b4ec01f-c4e8-47c0-a2e0-fffc940dcc31
                  description: Opus internal request ID
                created_at:
                  type: string
                  description: "Timestamp when stake request was created, in milliseconds"
                request_type:
                  type: string
                  enum: [stake, unstake]
                  description: Action done on-chain in the work of this request
                network:
                  type: string
                validators:
                  type: array
                  items:
                    type: object
                    properties:
                      public_signing_key:
                        type: string
                      status:
                        type: string
                        enum:
                          [
                            "created",
                            "deposited",
                            "pending",
                            "active",
                            "exited",
                            "withdrawn",
                          ]
                    required:
                      - public_signing_key
                      - status
              required:
                - request_id
                - created_at
                - request_type
                - network
                - validators
          deposits:
            type: array
            items:
              type: object
              properties:
                transaction_id:
                  type: string
                  pattern: "^0x[a-f,0-9]+$"
                  description: Eth1 chain deposit transaction ID
                when:
                  type: string
                  format: date
                  example: "2019-05-17"
                  description: Date on which deposit was made
                block:
                  type: integer
                  description: Eth1 chain block where deposit happened
                progress:
                  type: object
                  properties:
                    pending:
                      type: integer
                      description: Number of validators in pending state
                    deposited:
                      type: integer
                      description: Total number of nodes for which deposit happened, but they are not yet on chain
                    active:
                      type: integer
                      description: Total number of active/validating nodes
                validators:
                  type: array
                  items:
                    type: object
                    properties:
                      public_signing_key:
                        type: string
                      status:
                        type: string
                        enum: ["deposited", "pending", "active"]
                    required:
                      - public_signing_key
                      - status
              required:
                - transaction_id
                - when
                - block
                - validators
        required:
          - when
          - total
          - active
          - created
          - deposited
          - pending
          - exited
          - unstakeable
          - balance_active
          - balance_total
          - deposits
          - requests

    RewardsAndEffectivenessResponse:
      type: array
      description: Array of daily rewards objects
      items:
        type: object
        description: |
          Rewards single day statistics. Since manipulating gwei as-is can break Javascript big numbers,
          the ethereum numbers are exposed as string values. API consumers must convert them to integers
          manually.
        properties:
          network:
            type: string
            enum: ["ethereum"]
            description: "Network for which to perform statistics request"
          when:
            type: string
            format: date
            example: "2019-05-17"
            description: |
              Start date in the aggregated time range for which rewards are shown.
              This date is always UTC.
          aggregate_days:
            type: integer
            format: date
            example: "2019-05-17"
            description: Number of days in a single aggregation
          delta:
            type: string
            pattern: "^\\d+$"
            description: Total earnings (in gwei). This can be negative values
          apr:
            type: number
            format: float
            description: total rewards divided by active stake over 365 days
          rewards:
            type: object
            description: Rewards (in gwei) for particular date. These values are always positive
            properties:
              total:
                type: string
                pattern: "^\\d+$"
                description: Total rewards as collected during the day (without penalties)
              execution_priority:
                type: string
                pattern: "^\\d+$"
                description: Priority fees for the date
              execution_mev:
                type: string
                pattern: "^\\d+$"
                description: MEV earnings
              consensus_sync_committee:
                type: string
                pattern: "^\\d+$"
                description: Sync committee earnings
              consensus_block:
                type: string
                pattern: "^\\d+$"
                description: Consensus rewards for producing a block
              consensus_attestation:
                type: string
                pattern: "^\\d+$"
                description: Consensus rewards for attesting blocks
          penalties:
            type: object
            description: Penalties (in gwei) for particular date. These values are always positive.
            properties:
              total:
                type: string
                pattern: "^\\d+$"
                description: Total penalties in the day
              consensus_sync_committee:
                type: string
                pattern: "^\\d+$"
                description: Sync committee penalties
              consensus_attestation_missed:
                type: string
                pattern: "^\\d+$"
                description: Missed attestation penalties
              consensus_vote_late_target:
                type: string
                pattern: "^\\d+$"
                description: Late target vote penalties
              consensus_vote_wrong_target:
                type: string
                pattern: "^\\d+$"
                description: Wrong target vote penalties
              consensus_vote_late_source:
                type: string
                pattern: "^\\d+$"
                description: Late source vote penalties
          effectiveness:
            type: object
            description: Validators effectiveness (in %) aggregated over a sepcified time window. These values are always positive.
            properties:
              attester_effectiveness:
                type: number
                format: float
                description: The attester effectiveness over the requested time period
              proposer_effectiveness:
                type: number
                format: float
                description: The proposer effectiveness over the requested time period
              slashes:
                type: integer
                description: Number of validators slashed over the requested time period
    StatsRequest:
      type: "object"
      properties:
        from:
          type: string
          format: date
          example: "2019-05-17"
          description: |
            A starting day for which need to retrieve rewards.
            If not sent, the date of registration is used.
            This date should be always in UTC time zone.
        to:
          type: string
          format: date
          example: "2019-05-17"
          description: |
            An ending day for which need to retrieve rewards.
            By default, assumes it is current day.
            This date should be always in UTC time zone.
        aggregate_days:
          type: integer
          description: |
            Number of daily statistics aggregated in a single entry.
            The aggregation works as follows:
              - for percentage values, shows avg()
              - for gwei or count values, shows sum()
            By default, shows single day aggregations.
        wallets:
          type: array
          items:
            type: string
            pattern: "^(0x[a-fA-F0-9]{40})$"
            description: |
              Optionally submit an address of a wallet,
              so results will be filtered only to statistics related
              to that wallet.
        network:
          type: string
          enum: ["ethereum"]
          description: "Network for which to perform statistics request"
      required:
        - network
    ValidatorsRequest:
      type: "object"
      properties:
        from:
          type: string
          format: date
          example: "2019-05-17"
          description: |
            A starting day for which need to retrieve rewards.
            This date should be always in UTC time zone.
        to:
          type: string
          format: date
          example: "2019-05-17"
          description: |
            An ending day for which need to retrieve rewards.
            By default, assumes it is current day.
            This date should be always in UTC time zone.
        validators:
          type: array
          items:
            type: "string"
            description: |
              Validator signing key, or id object
          description: |
            Array of indices or public signing key,
            if empty returns all validators
        aggregate_days:
          type: integer
          description: |
            Number of daily statistics aggregated in a single entry.
            The aggregation works as follows:
              - for percentage values, shows avg()
              - for gwei or count values, shows sum()
            By default, shows single day aggregations.
        wallets:
          type: array
          items:
            type: string
            pattern: "^(0x[a-fA-F0-9]{40})$"
            description: |
              Optionally submit an address of a wallet,
              so results will be filtered only to statistics related
              to that wallet.
        network:
          type: string
          enum: ["ethereum"]
          description: "Network for which to perform statistics request"
      required:
        - network
    ValidatorsResponse:
      type: "array"
      items:
        type: object
        properties:
          network:
            type: string
            enum: ["ethereum"]
            description: "Network for which to perform statistics request"
          balance:
            type: string
            pattern: "^\\d+$"
            description: Validator balance (in gwei)
          status:
            type: string
            enum: ["created", "deposited", "pending", "active", "exited"]
          slashed:
            type: boolean
          mev_enabled:
            type: boolean
          index:
            type: integer
            description: On-chain index of validator (if missing, validator in deposited state)
          public_signing_key:
            type: string
          withdrawal_credentials:
            type: string
          rewards:
            $ref: "#/components/schemas/RewardsAndEffectivenessResponse"
          fee_recipient:
            type: string
        required:
          - status
          - balance
          - mev_enabled
          - rewards
          - withdrawal_credentials
          - public_signing_key
          - fee_recipient
paths:
  /health:
    get:
      description: "healthcheck"
      responses:
        200:
          description: OK
  /version:
    get:
      description: "Version of code base"
      responses:
        200:
          description: OK
          content:
            "application/json":
              schema:
                title: VersionResponse
                type: "object"
                properties:
                  code_version:
                    type: "string"
                    description: "Version of code base"
                  url_versions:
                    type: "string"
                    description: "Supported URL versions"
                required:
                  - code_version
                  - url_versions
  /api/v1/auth:
    get:
      description: "verify authentication status"
      tags:
        - auth
      responses:
        200:
          description: OK
        403:
          description: Forbidden
        401:
          description: Unauthorized
  /api/v1/api_keys:
    get:
      tags:
        - auth
      description: "list api keys"
      responses:
        200:
          description: OK
          content:
            "application/json":
              schema:
                title: ListApiKeysResponse
                type: "array"
                items:
                  $ref: "#/components/schemas/ApiKeyResponse"
        403:
          description: Forbidden
  /api/v1/api_keys/generate:
    post:
      tags:
        - auth
      description: "Generate a new api_key for use with X-API-KEY auth method. The returned key needs to be saved by the caller, as it isn't stored in the system."
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/ApiKeyGenerateRequest"
      responses:
        200:
          description: Ok
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ApiKeyGenerateResponse"
        403:
          description: Forbidden
  /api/v1/api_keys/{api_key_id}:
    parameters:
      - $ref: "#/components/parameters/api_key_id_param"
    get:
      tags:
        - auth
      description: "inspect the api_key entry"
      responses:
        200:
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ApiKeyResponse"
        403:
          description: Forbidden
        404:
          description: Not found
    delete:
      tags:
        - auth
      description: "delete the api_key entry"
      responses:
        200:
          description: OK
        403:
          description: Forbidden
        404:
          description: Not found
  /api/v1/stake:
    post:
      summary: Stake x amounts of 32ETH on Ethereum
      tags:
        - staking
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              title: "StakeRequest"
              type: "object"
              properties:
                request_id:
                  type: "string"
                  format: "uuid"
                  description: "Stake request id used to track request when polling the endpoint."
                fee_recipient:
                  type: string
                  pattern: "^(0x[a-fA-F0-9]{40})$"
                  description: "Ethereum address for receiving execution fees"
                withdrawal_address:
                  type: string
                  pattern: "^(0x[a-fA-F0-9]{40})$"
                  description: "Ethereum execution address for receiving deposit and consensus fees"
                amount:
                  type: integer
                  format: integer
                  description: "Amount of ETH, should be in multiples of 32ETH"
                network:
                  type: string
                  enum: ["ethereum"]
                  description: "Network for which to perform staking request"
              required:
                - request_id
                - fee_recipient
                - withdrawal_address
                - amount
                - network
      responses:
        202:
          description: "Accepted - request is being processed in the background"
        201:
          description: "Created - specified amount of ETH is ready for deposit"
          content:
            "application/json":
              schema:
                title: ListStakeResponse
                type: array
                items:
                  type: "object"
                  properties:
                    pubkey:
                      type: string
                    signature:
                      type: string
                    withdrawal_credentials:
                      type: string
                    deposit_data_root:
                      type: string
                    fee_recipient:
                      type: string
                  required:
                    - pubkey
                    - signature
                    - withdrawal_credentials
                    - deposit_data_root
                    - fee_recipient
        400:
          description: "Specified fee recipient or withdrawal credentials follow incorrect pattern or amount of ETH is invalid e.g. not a multiple of 32."
        428:
          description: "Staking capacity limit reached. Contact Chorus One to increase capacity."
  /api/v1/unstake:
    post:
      description: "Unstake x amounts of 32ETH on Ethereum"
      tags:
        - staking
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              title: "UnstakeRequest"
              type: "object"
              properties:
                amount:
                  type: integer
                  format: integer
                  description: "Amount of ETH to be unstaked, should be in multiples of 32ETH"
                network:
                  type: string
                  enum: ["ethereum"]
                  description: "Network for which to perform staking request"
      responses:
        202:
          description: "Accepted - request is being processed in the background"
        200:
          description: "Received successful response from Beacon chain for exiting specified amount of ETH. It takes at a minimum 5 epochs (32 minutes) for a validator to exit after initiating a voluntary exit. This number can be much higher depending on how many other validators are queued to exit."
        400:
          description: "Specified amount of ETH is invalid."
        428:
          description: "Specified amount of ETH is not yet in a state available to be unstaked. The amount of ETH should be actively staking, not have been slashed and have been active for at least 256 epochs (~27 hours) since it has been activated to be eligible for unstaking."
  /api/v1/stats:
    get:
      description: "Get rewards and aggregated node statistics for validators hosted by Chorus/Opus"
      tags:
        - rewards & performance
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/StatsRequest"
      responses:
        206:
          description: |
            Reward and performance data have been returned, but there is more to get.
            By default, response is sorted in descending order using `when` field meaning that first entry of the array is the most recent date of the rewards or nodes response. 
            Users should adjust the `to` parameter in their next request to be equal to the oldest `when` i.e. last entry of the `nodes` array to get more data.
            When paginating forward, users should adjust the "from" parameter to include the last "when" date returned from the API in order to obtain the next page of results.
          content:
            "application/json":
              schema:
                title: StatsResponse
                type: "object"
                properties:
                  rewards:
                    $ref: "#/components/schemas/RewardsAndEffectivenessResponse"
                  nodes:
                    $ref: "#/components/schemas/NodeAggregateResponse"
                required:
                  - rewards
                  - nodes
        200:
          description: "Reward and performance data have been returned, to this day"
          content:
            "application/json":
              schema:
                title: StatsResponse
                type: "object"
                properties:
                  rewards:
                    $ref: "#/components/schemas/RewardsAndEffectivenessResponse"
                  nodes:
                    $ref: "#/components/schemas/NodeAggregateResponse"
                required:
                  - rewards
                  - nodes
    post:
      description: "Get rewards and aggregated node statistics for validators hosted by Chorus/Opus"
      tags:
        - rewards & performance
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/StatsRequest"
      responses:
        206:
          description: |
            Reward and performance data have been returned, but there is more to get.
            Users should adjust "from" parameter to contain the last "when" date
            returned from an API to get more data.
          content:
            "application/json":
              schema:
                title: StatsPartialResponse
                type: "object"
                properties:
                  rewards:
                    $ref: "#/components/schemas/RewardsAndEffectivenessResponse"
                  nodes:
                    $ref: "#/components/schemas/NodeAggregateResponse"
                required:
                  - rewards
                  - nodes
        200:
          description: "Reward and performance data have been returned, to this day"
          content:
            "application/json":
              schema:
                title: StatsFullResponse
                type: "object"
                properties:
                  rewards:
                    $ref: "#/components/schemas/RewardsAndEffectivenessResponse"
                  nodes:
                    $ref: "#/components/schemas/NodeAggregateResponse"
                required:
                  - rewards
                  - nodes